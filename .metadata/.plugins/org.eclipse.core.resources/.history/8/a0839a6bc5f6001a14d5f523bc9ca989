/************************************************ Library ************************************************/

#include "libUART.h"

/********************************************* Used functions ********************************************/

void InitUSART1 (void){

	RCC		-> APB2ENR	|= RCC_APB2ENR_USART1EN;

	RCC		-> AHBENR	|= RCC_AHBENR_GPIOAEN;

	//TX
	GPIOA	-> MODER	&= ~GPIO_MODER_MODER9;
	GPIOA	-> MODER	|= GPIO_MODER_MODER9_1;

	GPIOA	-> OTYPER	&= ~GPIO_OTYPER_OT_9;

	GPIOA	-> PUPDR	&= ~GPIO_PUPDR_PUPDR9;
	GPIOA	-> PUPDR	|= GPIO_PUPDR_PUPDR9_0;

	GPIOA	-> OSPEEDR	|= GPIO_OSPEEDER_OSPEEDR9;

	GPIOA	-> AFR[1]	|= 0x07|(0x07 << (4*(9-8)));

	//RX
	GPIOA	-> MODER	&= ~GPIO_MODER_MODER10;
	GPIOA	-> MODER	|= GPIO_MODER_MODER10_1;

	GPIOA	-> PUPDR	&= ~GPIO_PUPDR_PUPDR10;

	GPIOA	-> AFR[1]	|= 0x07|(0x07 << (4*(10-8)));

	USART1	-> BRR		= 0xEA6; //Based on sysclk, not APB1 clk // recalculate

	USART1	-> CR1		|= USART_CR1_TE;
	USART1	-> CR1		|= USART_CR1_RE;
	USART1	-> CR1 		|= USART_CR1_UE;

	USART1	-> CR1		|= USART_CR1_RXNEIE;
	//NVIC_EnableIRQ(USART1_IRQn);
}


void SendUSART1 (char chr){
	while(!(USART1->ISR & USART_ISR_TC));
	USART1	->ISR		&= ~USART_ISR_TC;

	USART1	->TDR 		= chr;
}

void SendStringUSART1 (char* str){
	uint8_t i = 0;

	while(str[i])
	SendUSART1 (str[i++]);
}

void SendDataUSART1 (uint8_t data){
	while(!(USART1->ISR & USART_ISR_TC));
	USART1	->ISR		&= ~USART_ISR_TC;

	USART1	->TDR 		= data;
}

